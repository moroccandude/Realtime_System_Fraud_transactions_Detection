version: '3.9'

services:
  airflow-webserver:
    image: apache/airflow
    user: "0:0"
    depends_on:
      postgres-airflow:
        condition: service_healthy
      namenode:
        condition: service_started
      hiveserver2:
        condition: service_started
    ports:
      - "8080:8080"
    volumes:
      - ./airflow_home/dags:/opt/airflow/dags
      - ./airflow_home/logs:/opt/airflow/logs
      - ./airflow_home/plugins:/opt/airflow/plugins
      - ./airflow_home/data:/opt/airflow/data
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres-airflow:5432/airflow
      - AIRFLOW__CORE__LOAD_EXAMPLES=false
    command: webserver
    restart: unless-stopped
    networks:
      - data_network

  airflow-scheduler:
    image: apache/airflow
    user: "0:0"
    depends_on:
      postgres-airflow:
        condition: service_healthy
    volumes:
      - ./airflow_home/dags:/opt/airflow/dags
      - ./airflow_home/logs:/opt/airflow/logs
      - ./airflow_home/plugins:/opt/airflow/plugins
      - ./airflow_home/data:/opt/airflow/data
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres-airflow:5432/airflow
    command: scheduler
    restart: unless-stopped
    networks:
      - data_network

  postgres-airflow:
    image: postgres:13
    restart: unless-stopped
    container_name: postgres-airflow
    environment:
      POSTGRES_DB: airflow
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow -d airflow"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5433:5432"  # Changed host port to 5433 to avoid conflict
    volumes:
      - postgres_airflow_data:/var/lib/postgresql/data
    networks:
      - data_network

  airflow-init:
    image: apache/airflow
    user: "0:0"
    depends_on:
      postgres-airflow:
        condition: service_healthy

    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres-airflow:5432/airflow
      - AIRFLOW__CORE__FERNET_KEY=46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
    entrypoint: /bin/bash
    command:
      - "-c"
      -  "airflow db init &&  airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@example.com && mkdir -p /opt/airflow/dags /opt/airflow/logs /opt/airflow/plugins /opt/airflow/data &&    chown -R 50000:0 /opt/airflow/dags /opt/airflow/logs /opt/airflow/plugins /opt/airflow/data &&   chmod -R 755 /opt/airflow/dags /opt/airflow/logs /opt/airflow/plugins /opt/airflow/data"
    networks:
      - data_network

  hiveserver2:
    image: apache/hive:4.0.1
    depends_on:
      metastore:
        condition: service_started
    restart: unless-stopped
    container_name: hiveserver2
    hostname: hiveserver2
    environment:
      SERVICE_NAME: hiveserver2
      HIVE_SERVER2_THRIFT_PORT: 10000
    ports:
      - "10000:10000"
    volumes:
      - ./warehouse:/opt/hive/data/warehouse
    networks:
      - data_network

  postgres_metastore_hive:
    image: postgres:13
    restart: unless-stopped
    container_name: postgres_metastore
    hostname: postgres
    environment:
      POSTGRES_DB: metastore_db
      POSTGRES_USER: hive
      POSTGRES_PASSWORD: password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hive -d metastore_db"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5431:5432"  # Kept as is, distinct from postgres-airflow
    volumes:
      - hive_metastore_data:/var/lib/postgresql/data
    networks:
      - data_network

  metastore:
    image: apache/hive:4.0.1
    depends_on:
      postgres_metastore_hive:
        condition: service_healthy
    restart: unless-stopped
    container_name: metastore
    hostname: metastore
    environment:
      DB_DRIVER: postgres
      SERVICE_NAME: metastore
      HIVE_METASTORE_URI: thrift://metastore:9083
      SERVICE_OPTS: >-
        -Xmx1G
        -Djavax.jdo.option.ConnectionDriverName=org.postgresql.Driver
        -Djavax.jdo.option.ConnectionURL=jdbc:postgresql://postgres:5432/metastore_db
        -Djavax.jdo.option.ConnectionUserName=hive
        -Djavax.jdo.option.ConnectionPassword=password
        -Ddatanucleus.autoCreateSchema=true
        -Dhive.metastore.schema.verification=false
        -Dhive.metastore.schema.verification.record.version=false
    ports:
      - "9083:9083"
    volumes:
      - ./warehouse:/opt/hive/data/warehouse
      - ./postgresql-42.6.0.jar:/opt/hive/lib/postgresql-42.6.0.jar
    networks:
      - data_network

  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: namenode
    hostname: namenode
    restart: unless-stopped
    ports:
      - "9870:9870"
      - "9000:9000"
    environment:
      - CLUSTER_NAME=hadoop-cluster
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
      - HDFS_CONF_dfs_replication=3
    volumes:
      - hadoop_namenode_data:/hadoop/dfs/name
    healthcheck:
      test: ["CMD", "curl", "-f", "http://namenode:9870"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - data_network

  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode
    hostname: datanode
    restart: unless-stopped
    depends_on:
      - namenode
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
    volumes:
      - hadoop_datanode_data:/hadoop/dfs/data
    networks:
      - data_network

volumes:
  postgres_airflow_data:
  hive_metastore_data:
  hadoop_namenode_data:
  hadoop_datanode_data:

networks:
  data_network:
    driver: bridge